au BufRead ~/.mutt/tmp/mutt-* set tw=72 " Mutt
autocmd BufWritePre * :%s/\s\+$//e " Remove automatically all trailing whitespace
let mapleader = "\<Space>" " Change default leader mapping
set autoindent
set backspace=indent,eol,start " Fix backspace under Mac OS
set cursorline
set expandtab
set mat=2 " How many tenths of a second to blink when matching brackets
set nobackup
set nocompatible " be iMproved, required
set noswapfile
set nowrap
set number
set ruler
set shortmess=atI " Shorter messages and avoid useless Enter strikes
set showmatch " Highlight matching brackets
set so=10 " Set 10 lines to the cursor when moving vertically
set splitbelow " Split below by default
set splitright " Split on the right side by default
set t_Co=256 " Enable 256 color in vim.
set ttyfast " Indicates a fast terminal connection
set wildignore+=*.o,*.obj,*.pyc,*.DS_STORE,*.swc,*.bak " Ignore some files
set wildmenu
set wildmode=list:longest

set tabstop=2
set softtabstop=2
set shiftwidth=2

" base16 colorscheme
let base16colorspace=256
colorscheme base16-default

" Airline
set rtp+=~/.vim/airline
set completeopt-=preview
set laststatus=2
set noshowmode
set ttimeoutlen=50
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_powerline_fonts=1
let g:airline_theme='base16'

" CtrlP
set rtp+=~/.vim/ctrlp

" Auto-pairs
set rtp+=~/.vim/auto-pairs

" NeoComplete
set rtp+=~/.vim/neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#enable_auto_close_preview = 0

" Supertab
set rtp+=~/.vim/supertab
let g:SuperTabDefaultCompletionType = "context"

" Fugitive
set rtp+=~/.vim/fugitive

" GitGutter
set rtp+=~/.vim/gitgutter
let g:gitgutter_map_keys = 0 " Just use it to visualize change, nothing else

" NERDCommenter
set rtp+=~/.vim/nerdcommenter

" YAML
" Syntax file in 7.4 is fucking slow
set rtp+=~/.vim/yaml/after

" Go
au BufRead,BufNewFile *.go set filetype=go
set rtp+=~/.vim/go
let g:go_fmt_command = "goimports"
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <Leader>r <Plug>(go-run)
au FileType go nmap <Leader>b <Plug>(go-build)
au FileType go nmap <Leader>t <Plug>(go-test)
au FileType go nmap <Leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>e <Plug>(go-rename)

" IndentHTML
set rtp+=~/.vim/indenthtml

" Syntastic
set rtp+=~/.vim/syntastic
let g:syntastic_check_on_open=0
let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_post_args='--ignore=E501'

" Tagbar
set rtp+=~/.vim/tagbar
nmap <F8> :TagbarToggle<CR>
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }

" Activate plugin and indent
syntax on
filetype on
filetype indent on
filetype plugin indent on
filetype plugin on
set omnifunc=syntaxcomplete#Complete

" Navigate buffers
noremap <F1> :bprev<CR>
noremap <F2> :bnext<CR>

" Toggle line numbers and fold column for easy copying
nnoremap <F4> :set nonumber!<CR>:set foldcolumn=0<CR>

" Proper indentation for Shell scripts
autocmd FileType sh set tabstop=4
autocmd FileType sh set softtabstop=4
autocmd FileType sh set shiftwidth=4

" Proper indentation for Python
autocmd FileType python set tabstop=4
autocmd FileType python set softtabstop=4
autocmd FileType python set shiftwidth=4

" Define a template for new Python files
autocmd BufNewFile *.py 0read ~/.vim/templates/python.py

" Fix filetype for Django template files
autocmd BufNewFile,BufRead *.html set filetype=htmldjango.html

" Fix filetype for CoffeeScript files
autocmd BufNewFile,BufRead *.coffee set filetype=coffee
"
" Proper indentation for Arduino
autocmd BufNewFile,BufRead *.pde set ft=arduino

" Autocompletion
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType go set omnifunc=go#complete#Complete

" Learn the hard way
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Use ctrl-[hjkl] to select the active split!
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

" Fix background color (Gitgutter/Solarized)
hi clear SignColumn
set background=dark
hi Normal ctermbg=none
